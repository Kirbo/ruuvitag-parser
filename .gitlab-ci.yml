## https://docs.gitlab.com/ce/ci/yaml/README.html
## https://docs.gitlab.com/ee/ci/variables/README.html

include:
  - template: Security/SAST.gitlab-ci.yml

###### GENERAL ################################################################
image: node:18

###### VARIABLES ##############################################################
variables:
  SAST_EXCLUDED_PATHS: tests, node_modules, coverage, dist

###### TEMPLATES ##############################################################
.general: &general
  tags:
    - gitlab-org
  variables:
    GIT_STRATEGY: fetch

.no-tags: &no-tags
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

###### STAGES #################################################################
stages:
  - install
  - test
  - compile
  - post compile
  - publish

###### JOBS ###################################################################
dependencies:
  <<: *general
  <<: *no-tags
  stage: install
  artifacts:
    when: always
    paths:
      - node_modules
  script:
    - yarn install

lint:
  <<: *general
  <<: *no-tags
  stage: test
  needs:
    - job: dependencies
      artifacts: true
  script:
    - yarn lint

verify:
  <<: *general
  <<: *no-tags
  stage: test
  needs:
    - job: dependencies
      artifacts: true
  script:
    - yarn verify

unit:
  <<: *general
  <<: *no-tags
  stage: test
  # coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+).*\|*\s+([\d\.]+).*\|*\s+([\d\.]+).*\|*\s+([\d\.]+).*/'
  coverage: '/All files[^|]*\|[^|]*\s+[\d\.]+.*\|*\s+([\d\.]+).*\|*\s+[\d\.]+.*\|*\s+[\d\.]+.*/'
  needs:
    - job: dependencies
      artifacts: true
  artifacts:
    when: always
    paths:
      - junit.xml
      - coverage
    reports:
      junit: junit.xml
    expire_in: 1 month
  script:
    - yarn test:unit --ci --colors --coverage --coverageReporters=html text --reporters=default jest-junit
ts to js:
  <<: *general
  <<: *no-tags
  stage: compile
  needs:
    - job: dependencies
      artifacts: true
  artifacts:
    paths:
      - dist
    expire_in: 1 month
  script:
    - yarn compile:ci

integration test:
  <<: *general
  <<: *no-tags
  stage: post compile
  # coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+).*\|*\s+([\d\.]+).*\|*\s+([\d\.]+).*\|*\s+([\d\.]+).*/'
  coverage: '/All files[^|]*\|[^|]*\s+[\d\.]+.*\|*\s+([\d\.]+).*\|*\s+[\d\.]+.*\|*\s+[\d\.]+.*/'
  needs:
    - job: dependencies
      artifacts: true
    - job: ts to js
      artifacts: true
  script:
    - yarn test:integration --ci --colors --coverage --coverageReporters=html text --reporters=default jest-junit

new release:
  <<: *general
  stage: publish
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
  image:
    name: registry.gitlab.com/go-semantic-release/semantic-release:latest
    entrypoint: [""]
  needs:
    - job: lint
      artifacts: false
    - job: unit
      artifacts: false
    - job: verify
      artifacts: false
    - job: ts to js
      artifacts: false
    - job: integration test
      artifacts: false
  artifacts:
    paths:
      - .version
    expire_in: 1 month
    when: on_success
  script:
    - semantic-release --provider gitlab --version-file
    # - semantic-release --provider gitlab --version-file --allow-initial-development-versions # Once stable, remove this and uncomment previous line

npm package:
  <<: *general
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - exists:
        - .version
      when: always
    - when: never
  needs:
    - job: new release
      artifacts: true
    - job: ts to js
      artifacts: true
  before_script:
    - test -f .version || exit 0 # If no `.version` file found, just exit
  script:
    - echo "${npmrc}" > ~/.npmrc
    - echo "Publish version $(cat .version)"
    - yarn publish --new-version $(cat .version) --no-git-tag-version --non-interactive
